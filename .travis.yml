# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=loc

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    # - env: TARGET=i686-unknown-linux-gnu
    # - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Other architectures
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=armv7-unknown-linux-gnueabihf
    # - env: TARGET=mips-unknown-linux-gnu
    # - env: TARGET=mips64-unknown-linux-gnuabi64
    # - env: TARGET=mips64el-unknown-linux-gnuabi64
    # - env: TARGET=mipsel-unknown-linux-gnu
    # - env: TARGET=powerpc-unknown-linux-gnu
    # - env: TARGET=powerpc64-unknown-linux-gnu
    # - env: TARGET=powerpc64le-unknown-linux-gnu
    # - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  api_key:
    secure: ru/43ejUelnvh6acUxM6rNEnw1XA6+dHjoVTXkJPE/Vp0pFhRXwRrjvRP+Oo4TjLFKSp9IL9Y2RUyUE2QKGn3AaMNTX4TLjP0WaMA4lU5Fm/RiCIr5/As/XJVTnHENNCQ0pKEDPiP6HzbV2DAZSqaZTSSTkmFNTNVIUCz1+/m8wsgv+geZAOeV7UVD9olW2g2vDeXY0cQjRx+QQRvuqgTp2HsPypYVjNTeM9YDiAGXbIMz4xOpxKBKkQA/bGLVkyXgur1+SW/Ps+z9HPNtBqs02kMzhozOF2skSIhx1TsqBnl2OE8yMp6KqfjmDr61Po/P8yZBp3pG4dg18I/BLPyndQ0NZEyXScmDqSuaeTQfUVQ8QWEiIM1mpiyrZPhRbrMntyBCICglzJmVuGI/L7KH3rUcsjAa2C6ehZAw1rSlkc/rchcLdnAzdJ6R7M5AIlL6xKF/D0MOBXNRY9S3HKowpqNn3yYh4hcf4xFs2Ms5tSI5GPyKsKDIiimUoAHEpIMhNi7ojZVPucctc2ybf2Op3DXCJvRdstxA9Sln+1Ubb+0tz2/9i5w1P/dPq1v51HUj+eB5gcHqOSA5jSAJ9JuT3FQsmLyC6Xm9Pyv1sMVYrKchYleLezahG8hmwfzxdyQT+3LFjIV2Yx8ALcjvxs3cwolqcQ7T6cO1YQmBn/lag=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
